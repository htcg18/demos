// Generated by CoffeeScript 1.3.3
(function() {
  var App, Display, Item, ItemView, List, ListView, Router, log;

  log = console.log.bind(console);

  Item = Backbone.Model.extend({
    defaults: {
      active: false
    }
  });

  ItemView = Backbone.View.extend({
    tagName: 'li',
    template: JST.item,
    render: function() {
      this.$el.toggleClass('active', this.model.get('active'));
      this.$el.html(this.template(this.model.toJSON()));
      return this;
    },
    initialize: function() {
      return this.model.on('change', this.render, this);
    }
  });

  List = Backbone.Collection.extend({
    model: Item
  });

  ListView = Backbone.View.extend({
    tagName: 'ul',
    className: 'nav nav-list well',
    render: function() {
      var _this = this;
      return this.collection.each(function(model) {
        var view;
        view = new ItemView({
          model: model
        });
        return _this.$el.append(view.render().el);
      });
    },
    initialize: function() {
      return this.collection.on('reset', this.render, this);
    }
  });

  Router = Backbone.Router.extend({
    routes: {
      'list/:item': 'activate'
    },
    activate: function(item) {
      var model, _ref;
      if ((_ref = App.activated) != null) {
        _ref.set('active', false);
      }
      App.activated = model = App.list.get(item);
      model.set('active', true);
      return App.display.render(model);
    }
  });

  Display = Backbone.View.extend({
    tagName: 'pre',
    render: function(model) {
      var key, s, val, _ref;
      s = '';
      _ref = model.toJSON();
      for (key in _ref) {
        val = _ref[key];
        s += "" + key + ": " + val + "\n";
      }
      return this.$el.text(s);
    }
  });

  App = {
    initialize: function() {
      var display, list, listView, router;
      this.list = list = new List;
      listView = new ListView({
        collection: list
      });
      $('#menu').append(listView.el);
      this.display = display = new Display;
      $('#display').append(display.el);
      list.reset([
        {
          name: 'foo',
          id: 'foo'
        }, {
          name: 'bar',
          id: 'bar'
        }, {
          name: 'baz',
          id: 'baz'
        }
      ]);
      router = new Router;
      return Backbone.history.start();
    }
  };

  App.initialize();

}).call(this);
