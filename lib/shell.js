// Generated by CoffeeScript 1.3.3
(function() {
  var fs, getType, log, magic, mmm, os, path, step;

  log = console.log;

  fs = require('fs');

  os = require('os');

  path = require('path');

  mmm = require('mmmagic');

  step = require('step');

  magic = new mmm.Magic(mmm.MAGIC_MIME_TYPE);

  process.env['HOSTNAME'] = os.hostname();

  getType = function(stat) {
    if (stat.isFile()) {
      return 'file';
    }
    if (stat.isDirectory()) {
      return 'directory';
    }
    if (stat.isBlockDevice()) {
      return 'block';
    }
    if (stat.isCharacterDevice()) {
      return 'character';
    }
    if (stat.isSymbolicLink()) {
      return 'symlink';
    }
    if (stat.isFIFO()) {
      return 'fifo';
    }
    if (stat.isSocket()) {
      return 'socket';
    }
  };

  module.exports = {
    env: function(args, cb) {
      var arg, values, _i, _len;
      values = [];
      for (_i = 0, _len = args.length; _i < _len; _i++) {
        arg = args[_i];
        values.push(process.env[arg]);
      }
      return cb(values);
    },
    ls: function(args, cb) {
      var dirname;
      dirname = args[0];
      if (dirname[0] !== '/') {
        dirname = path.resolve('apps', dirname);
      }
      return fs.readdir(dirname, function(err, basenames) {
        var abs, basename, stat, stats, _i, _len;
        if (err) {
          throw err;
        }
        stats = [];
        for (_i = 0, _len = basenames.length; _i < _len; _i++) {
          basename = basenames[_i];
          abs = path.join(dirname, basename);
          stat = fs.statSync(abs);
          stat.basename = basename;
          stat.type = getType(stat);
          stats.push(stat);
        }
        return cb(stats);
      });
    }
  };

}).call(this);
